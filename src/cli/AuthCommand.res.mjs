// Generated by ReScript, PLEASE EDIT WITH CARE

import * as AuthUtilsJs from "../lib/authUtils.js";

function getGitHubAuth(prim) {
  return AuthUtilsJs.getGitHubAuth();
}

function clearSavedAuth(prim) {
  return AuthUtilsJs.clearSavedAuth();
}

function getAuthDetails(prim) {
  return AuthUtilsJs.getAuthDetails(prim);
}

function sourceToString(source) {
  if (source === "env-var") {
    return "Environment Variable";
  } else if (source === "config-file") {
    return "Config File";
  } else if (source === "manual") {
    return "Manual Entry";
  } else {
    return "GitHub CLI";
  }
}

async function authTestCommand() {
  console.log("🔐 Testing GitHub Authentication...\n");
  var authConfig = await AuthUtilsJs.getGitHubAuth();
  console.log("✅ Successfully authenticated via: " + sourceToString(authConfig.source));
  var authDetails = await AuthUtilsJs.getAuthDetails(authConfig);
  var name = authDetails.name;
  var nameStr = name !== undefined ? name : "No name set";
  console.log("👤 Authenticated as: " + authDetails.username + " (" + nameStr + ")");
  var email = authDetails.email;
  var emailStr = email !== undefined ? email : "Not public";
  console.log("📧 Email: " + emailStr);
  var scopesStr = authDetails.scopes.length > 0 ? authDetails.scopes.join(", ") : "None detected";
  console.log("📋 Token scopes: " + scopesStr);
  if (authDetails.scopes.includes("repo")) {
    console.log("✅ Token has repo access (required for creating PRs)");
  } else {
    console.log("⚠️  Token may not have sufficient permissions for creating PRs");
  }
}

async function authLogoutCommand() {
  console.log("🔓 Clearing saved authentication...\n");
  await AuthUtilsJs.clearSavedAuth();
  console.log("✅ Authentication cleared successfully");
  console.log("💡 Note: This only clears tokens saved by jj-stack. GitHub CLI auth is managed separately.");
}

function authHelpCommand() {
  console.log("🔐 GitHub Authentication Help\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\njj-stack supports multiple authentication methods (in priority order):\n1. 🛠️  GitHub CLI (recommended)\n   Install: https://cli.github.com/\n   Setup: gh auth login\n2. 🌍 Environment Variables\n   export GITHUB_TOKEN=your_token_here\n   export GH_TOKEN=your_token_here  # Alternative name\n3. 📁 Config File\n   File: ~/.config/jj-stack/config.json\n   Format: {\"github\": {\"token\": \"your_token_here\"}}\n4. 🔗 Personal Access Token\n   Create at: https://github.com/settings/tokens/new\n   Required scopes: repo, pull_requests\nCommands:\n  jj-stack auth test    - Test current authentication\n  jj-stack auth logout  - Clear saved authentication\n  jj-stack auth help    - Show this help\n");
}

export {
  getGitHubAuth ,
  clearSavedAuth ,
  getAuthDetails ,
  sourceToString ,
  authTestCommand ,
  authLogoutCommand ,
  authHelpCommand ,
}
/* ../lib/authUtils.js Not a pure module */
