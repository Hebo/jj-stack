// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Ink from "ink";
import * as PervasivesU from "rescript/lib/es6/pervasivesU.js";
import * as JsxRuntime from "react/jsx-runtime";
import * as BookmarkSelectionComponent from "./BookmarkSelectionComponent.res.mjs";

function createMockSegments() {
  var singleBookmarkSegment_bookmarks = [{
      name: "feature-main",
      commitId: "abc123commit",
      changeId: "abc123",
      hasRemote: true,
      isSynced: true
    }];
  var singleBookmarkSegment_changes = [];
  var singleBookmarkSegment = {
    bookmarks: singleBookmarkSegment_bookmarks,
    changes: singleBookmarkSegment_changes
  };
  var multipleBookmarksWithRemoteSegment_bookmarks = [
    {
      name: "refactor-part1",
      commitId: "def456commit",
      changeId: "def456",
      hasRemote: true,
      isSynced: false
    },
    {
      name: "refactor-alternate",
      commitId: "def456commit",
      changeId: "def456",
      hasRemote: false,
      isSynced: false
    }
  ];
  var multipleBookmarksWithRemoteSegment_changes = [];
  var multipleBookmarksWithRemoteSegment = {
    bookmarks: multipleBookmarksWithRemoteSegment_bookmarks,
    changes: multipleBookmarksWithRemoteSegment_changes
  };
  var multipleBookmarksNoDefaultSegment_bookmarks = [
    {
      name: "hotfix-a",
      commitId: "ghi789commit",
      changeId: "ghi789",
      hasRemote: false,
      isSynced: false
    },
    {
      name: "hotfix-b",
      commitId: "ghi789commit",
      changeId: "ghi789",
      hasRemote: false,
      isSynced: false
    },
    {
      name: "hotfix-c",
      commitId: "ghi789commit",
      changeId: "ghi789",
      hasRemote: false,
      isSynced: false
    }
  ];
  var multipleBookmarksNoDefaultSegment_changes = [];
  var multipleBookmarksNoDefaultSegment = {
    bookmarks: multipleBookmarksNoDefaultSegment_bookmarks,
    changes: multipleBookmarksNoDefaultSegment_changes
  };
  return [
          singleBookmarkSegment,
          multipleBookmarksWithRemoteSegment,
          multipleBookmarksNoDefaultSegment
        ];
}

function testBookmarkSelection() {
  console.log("ðŸ§ª Testing BookmarkSelectionComponent...");
  var mockSegments = createMockSegments();
  var onComplete = function (selectedBookmarks) {
    console.log("âœ… User completed bookmark selection:");
    selectedBookmarks.forEach(function (bookmark) {
          console.log("   Selected: " + bookmark.name + " (change: " + bookmark.changeId + ")");
        });
    console.log("Exiting test...");
    return PervasivesU.exit(0);
  };
  var component = JsxRuntime.jsx(BookmarkSelectionComponent.make, {
        segments: mockSegments,
        onComplete: onComplete
      });
  $$Ink.render(component);
}

testBookmarkSelection();

export {
  createMockSegments ,
  testBookmarkSelection ,
}
/*  Not a pure module */
